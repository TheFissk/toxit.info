# Generated by Django 4.1.5 on 2023-01-24 06:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Node',
            fields=[
                ('sub_name', models.CharField(help_text='the name of the subreddit scored by the A.I. retrieved by the web crawler.', max_length=24, primary_key=True, serialize=False)),
                ('toxicity_score', models.FloatField(default=0, help_text='Indicator of how toxic the Subreddit is ranging from -1.0 to 1.0; where -1.0 is the most toxic and 1.0 is the most wholesome.')),
            ],
        ),
        migrations.CreateModel(
            name='Snapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snapshot_date', models.DateTimeField(help_text='When snapshot was captured.', verbose_name='Date & Time snapshot was collected')),
                ('edge_table', models.ForeignKey(help_text='All connections between nodes in the snapshot.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edges', to='toxit.node')),
                ('node_table', models.ForeignKey(help_text='All subreddit nodes related to the snapshot.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nodes', to='toxit.node')),
            ],
        ),
        migrations.CreateModel(
            name='Edge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shared_mod_count', models.PositiveIntegerField(default=0, help_text='Arc weight representing the number of shared moderators between subreddits.')),
                ('shared_mod_sim', models.FloatField(default=0, help_text='Arc weight representing some magic stats number with a fancy name.')),
                ('end_node', models.ForeignKey(help_text='Destination of edge', on_delete=django.db.models.deletion.CASCADE, related_name='end', to='toxit.node')),
                ('start_node', models.ForeignKey(help_text='Origin of edge', on_delete=django.db.models.deletion.CASCADE, related_name='start', to='toxit.node')),
            ],
        ),
    ]
